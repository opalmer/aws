{
  "Description": "The stack responsible for building the Windows AMI",
  "Parameters": {
    "ImageId": {
      "Description": "The base AMI to use for building the Windows host.",
      "Default": "ami-f70cdd9c",
      "Type": "AWS::EC2::Image::Id"
    },
    "InstanceType": {
      "Type": "String",
      "Default": "t2.micro",
      "Description": "The EC2 instance type",
      "AllowedValues": ["t2.micro", "t2.small", "t2.medium"]
    },
    "AvailabilityZone": {
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "Default": "us-east-1e",
      "Description": "The AZ to place the instance in."
    },
    "SubnetId": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "The subnet the instance will assign its network adapter to."
    },
    "SecurityGroupId": {
      "Type": "AWS::EC2::SecurityGroup::Id",
      "Description": "The id of the security group the network adapter(s) will live in."
    },
    "KeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "opalmer",
      "Description": "The key pair to be used for decrypting the Windows password."
    }
  },
  "Resources": {
    "Host": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {"Ref": "ImageId"},
        "AvailabilityZone": {"Ref": "AvailabilityZone"},
        "KeyName": {"Ref": "KeyPair"},
        "InstanceType": {"Ref": "InstanceType"},
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [{"Ref": "SecurityGroupId"}],
            "SubnetId": {"Ref": "SubnetId"}
          }
        ],
        "Tags": [
          {"Key": "Name", "Value": "windows-build-ami"}
        ],
        "UserData": {"Fn::Base64": {"Fn::Join" : ["", [
          "<script>\n",

          "cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" },
          " -r Host",
          " --region ", { "Ref" : "AWS::Region" }, "\n",

          "cfn-signal.exe -e %ERRORLEVEL% ", {
            "Fn::Base64": {"Ref": "WaitHandle" }}, "\n",

          "</script>"
          ]]}
        }
      },
      "Metadata": {
        "CloudFormation::Init": {
          "files": {
            "C:\\python\\installers\\python-2.6.6.amd64.msi": {
              "source": "https://www.python.org/ftp/python/2.6.6/python-2.6.6.amd64.msi"
            },
            "C:\\python\\installers\\python-2.6.6.msi": {
              "source": "https://www.python.org/ftp/python/2.6.6/python-2.6.6.msi"
            },
            "C:\\python\\installers\\python-2.7.10.amd64.msi": {
              "source": "https://www.python.org/ftp/python/2.7.10/python-2.7.10.amd64.msi"
            },
            "C:\\python\\installers\\python-2.7.10.msi": {
              "source": "https://www.python.org/ftp/python/2.7.10/python-2.7.10.msi"
            },
            "C:\\python\\installers\\python-3.2.5.amd64.msi": {
              "source": "https://www.python.org/ftp/python/3.2.5/python-3.2.5.amd64.msi"
            },
            "C:\\python\\installers\\python-3.3.5.amd64.msi": {
              "source": "https://www.python.org/ftp/python/3.3.5/python-3.3.5.amd64.msi"
            },
            "C:\\python\\installers\\python-3.3.5.msi": {
              "source": "https://www.python.org/ftp/python/3.3.5/python-3.3.5.msi"
            },
            "C:\\python\\installers\\python-3.4.3.amd64.msi": {
              "source": "https://www.python.org/ftp/python/3.4.3/python-3.4.3.amd64.msi"
            },
            "C:\\python\\installers\\python-3.4.3.msi": {
              "source": "https://www.python.org/ftp/python/3.4.3/python-3.4.3.amd64.msi"
            },
            "C:\\python\\installers\\pypy-2.6.0-win32.zip": {
              "source": "https://bitbucket.org/pypy/pypy/downloads/pypy-2.6.0-win32.zip"
            },
            "C:\\python\\installers\\pypy3-2.4.0-win32.zip": {
              "source": "https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-win32.zip"
            }
          }
        }
      }
    },
    "WaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "WaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "Host",
      "Properties": {
        "Handle": {"Ref": "WaitHandle"},
        "Timeout": "3600"
      }
    }
  }
}
